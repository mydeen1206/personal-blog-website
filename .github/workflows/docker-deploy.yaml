name: CICD for Personal blog Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
    name: Docker Build and Push
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build --no-cache -t mydeendevops369/blog:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push mydeendevops369/blog:latest

  deploy:
    name: Deploy to GCP VM
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Deploy to GCP VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          port: 22
          script: |
            docker pull mydeendevops369/blog:latest
            docker stop blog || echo "Not running"
            docker rm -f blog || echo "Not present"
            docker run -d --name blog -p 80:80 mydeendevops369/blog:latest

  gdeploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --zone "$CLUSTER_ZONE" \
            --project "$PROJECT_ID"

      - name: Deploy to GKE
        run: |
          #kubectl apply -f ./k8s/ingress -n webapps
          #kubectl get svc -n webapps
          kubectl get pods
